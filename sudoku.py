from square import *

##Easy
#nxn = [
#    [2,1,0,0,0,5,0,0,8],
#    [0,0,3,7,0,0,6,9,0],
#    [0,0,8,4,1,0,0,2,0],
#    [0,0,4,3,8,0,9,0,5],
#    [0,6,0,0,0,0,0,7,0],
#    [9,0,1,0,7,2,3,0,0],
#    [0,7,0,0,6,4,1,0,0],
#    [0,5,2,0,0,1,7,0,0],
#    [1,0,0,8,0,0,0,4,9]
#]

##Mild
#nxn = [
#    [1,0,5,0,0,0,2,0,7],
#    [3,0,0,0,0,0,0,0,8],
#    [0,4,0,0,7,0,0,6,0],
#    [0,7,0,8,0,3,0,9,2],
#    [2,5,0,4,0,7,0,3,1],
#    [0,8,0,2,0,6,0,7,0],
#    [0,9,0,0,4,0,0,5,0],
#    [5,0,0,0,0,0,0,0,6],
#    [6,0,8,0,0,0,4,0,9]
#]

##Difficult
#nxn = [
#    [4,0,0,0,9,0,0,3,0],
#    [3,0,0,0,5,8,7,0,0],
#    [0,8,6,0,0,0,0,1,0],
#    [0,0,0,4,0,9,0,0,0],
#    [0,7,0,0,0,0,0,4,0],
#    [0,0,0,5,0,7,0,0,0],
#    [0,1,0,0,0,0,2,8,0],
#    [0,0,5,8,7,0,0,0,6],
#    [0,4,0,0,3,0,0,0,5]
#]

##Difficult
#nxn = [
#    [0,9,0,0,0,2,0,7,0],
#    [8,0,0,0,0,0,9,0,2],
#    [0,0,0,6,0,1,0,0,0],
#    [0,0,9,1,0,3,0,0,5],
#    [0,0,7,0,0,0,3,0,0],
#    [4,0,0,5,0,7,2,0,0],
#    [0,0,0,7,0,9,0,0,0],
#    [3,0,5,0,0,0,0,0,4],
#    [0,1,0,8,0,0,0,2,0]    
#]

##Fiendish
#nxn = [
#    [0,0,0,9,0,0,0,0,0],
#    [0,0,0,0,0,0,0,2,8],
#    [8,4,0,7,0,0,5,0,6],
#    [1,0,0,0,2,5,4,0,7],
#    [0,0,0,0,0,0,0,0,0],
#    [5,0,7,8,9,0,0,0,1],
#    [2,0,3,0,0,9,0,8,4],
#    [6,8,0,0,0,0,0,0,0],
#    [0,0,0,0,0,3,0,0,0]
#]

##Fiendish
#nxn = [
#    [0,3,4,0,0,0,6,0,0],
#    [0,0,0,0,0,9,0,7,0],
#    [0,0,8,1,0,0,0,0,0],
#    [0,1,5,0,4,2,0,3,0],
#    [4,0,0,0,0,0,0,0,1],
#    [0,9,0,7,1,0,4,6,0],
#    [0,0,0,0,0,1,8,0,0],
#    [0,5,0,9,0,0,0,0,0],
#    [0,0,1,0,0,0,2,4,0]
#]

##Fiendish
#nxn = [
#    [0,0,6,0,0,0,8,0,5],
#    [0,0,0,0,6,9,0,0,0],
#    [0,4,0,5,0,0,6,0,1],
#    [5,0,0,0,1,0,0,0,0],
#    [0,0,7,0,0,0,2,0,0],
#    [0,0,0,0,9,0,0,0,4],
#    [1,0,9,0,0,7,0,8,0],
#    [0,0,0,3,8,0,0,0,0],
#    [2,0,5,0,0,0,3,0,0]
#]

##Fiendish
#nxn = [
#    [7,0,0,6,0,0,0,0,4],
#    [0,0,0,0,0,0,6,0,0],
#    [0,0,9,0,4,0,2,5,0],
#    [0,0,0,0,6,0,5,0,0],
#    [4,0,5,0,1,0,3,0,9],
#    [0,0,6,0,8,0,0,0,0],
#    [0,1,4,0,9,0,8,0,0],
#    [0,0,7,0,0,0,0,0,0],
#    [2,0,0,0,0,5,0,0,3]
#]
#
##Fiendish - unsolved
#nxn = [
#    [9,0,0,0,1,0,0,0,5],
#    [0,0,8,6,5,0,3,0,0],
#    [0,7,0,0,0,0,0,2,0],
#    [0,0,0,0,0,3,0,4,0],
#    [3,0,0,0,6,0,0,0,8],
#    [0,9,0,1,0,0,0,0,0],
#    [0,8,0,0,0,0,0,1,0],
#    [0,0,3,0,4,2,6,0,0],
#    [2,0,0,0,8,0,0,0,3]
#]

##Fiendish pg 63
#nxn = [
#    [0,5,0,0,0,0,0,0,0],
#    [0,6,7,5,1,0,0,0,9],
#    [0,0,4,0,2,0,1,0,0],
#    [0,2,0,6,0,0,0,0,0],
#    [4,0,0,0,5,0,0,0,7],
#    [0,0,0,0,0,4,0,1,0],
#    [0,0,6,0,3,0,9,0,0],
#    [2,0,0,0,4,1,3,8,0],
#    [0,0,0,0,0,0,0,4,0]
#]

##Fiendish pg 92
nxn = [
    [1,0,0,5,0,0,0,0,7],
    [0,7,8,0,0,0,5,0,1],
    [0,0,0,0,0,2,0,8,0],
    [0,0,1,0,6,0,0,3,0],
    [0,0,0,0,2,0,0,0,0],
    [0,9,0,0,5,0,4,0,0],
    [0,4,0,6,0,0,0,0,0],
    [5,0,7,0,0,0,3,6,0],
    [9,0,0,0,0,8,0,0,2]
]

##Mild
#nxn = [
#    [4,0,0,5,1,8,0,0,6],
#    [0,0,0,0,0,0,0,0,0],
#    [0,3,8,0,0,0,7,2,0],
#    [0,0,7,1,3,5,4,0,0],
#    [0,8,0,0,0,0,0,3,0],
#    [0,0,9,8,6,2,5,0,0],
#    [0,5,4,0,0,0,2,6,0],
#    [0,0,0,0,0,0,0,0,0],
#    [2,0,0,7,4,3,0,0,1]
#]

sxs = SudokuSquare()
sxs.setVal(nxn)
SudokuSquare.explain = False
SudokuSquare.interactive = True

sxs.solve()
sxs.validate()

#for r in range(3,6):
#    for c in range(0,3):
#        print ("%d, %d: %s") % (r, c, sxs.cell(r,c).getOpt())

#for r in range(0,9):
#    print nxn[r]
#
#print        
#sxs.scanAll()
#options = sxs.sudokuSquareOptions()
#for r in range(0,9):
#    print options[r]


#print sxs.c(0,5).get()
#print sxs.c(0,8).count()
#print sxs.c(0,5).count()
#print sxs.rowVal(0)
#print sxs.colVal(5)
#print sxs.square(0,1)
#print sxs.squareVal(0,1)
#print sxs.c(3,3).square()

#r = 0
#for c in range(0,9):
#    print "Count @(%d, %d) = %d" % (r, c, sxs.cell(r,c).count())
#    
#sxs.scanRow(0,1)
#sxs.scanCol(0,1)
#sxs.scanSquare(0,1)
#
#r = 0
#for c in range(0,9):
#    print "Count @(%d, %d) = %d" % (r, c, sxs.cell(r,c).count())
